<net.rptools.maptool.model.MacroButtonProperties>
  <macroUUID>9e749fe8-ea91-4d4f-97ac-ffa3e581241b</macroUUID>
  <saveLocation>Token</saveLocation>
  <index>54</index>
  <colorKey>default</colorKey>
  <hotKey>None</hotKey>
  <command>[h: basicToon = getProperty ("dndb_BasicToon")]
[h, if (encode(basicToon) == ""), code: {
	[h: errMsg = "Token needs to sync with DnDBeyond first"]
	[h: abort( input(" junk | | " + errMsg + " | LABEL | TEXT=false"))]
	[r: return (0, errMsg)]
}; {}]
[h: toonAttackJson = json.get (basicToon, "attacks")]
[h: existingAttackJson = getProperty ("attackJSON")]
&lt;!-- Merge the attack JSON, which means overwrite common key names, add new ones, --&gt;
&lt;!-- but do not clear custom keys --&gt;

&lt;!-- We gotta roll our own merge --&gt;
&lt;!-- Iterate the existing array. If an attack is found the  new array of the same --&gt;
&lt;!-- name, ignore it. Otherwise add the attack to the array. Return the results --&gt;
[h: newAttackJSON = toonAttackJson]

[h, foreach (existingAttack, existingAttackJson), code: {
	[h: newAttack = ""]
	[h: append = 1]
	[h, foreach (toonAttack, toonAttackJson), code: {
		[h: toonAttackName = json.get (toonAttack, "name")]
		[h: existingAttackJsonName = json.get (existingAttack, "name")]
		[h, if (toonAttackName == existingAttackJsonName): append = 0]
	}]
	[h, if (append &gt; 0): newAttackJSON = json.append (newAttackJSON, existingAttack); ""]
}]

[h: setProperty ("attackJSON", newAttackJSON)]</command>
  <label>dndb_mergeAttackJson</label>
  <group>Utility</group>
  <sortby/>
  <autoExecute>true</autoExecute>
  <includeLabel>false</includeLabel>
  <applyToTokens>true</applyToTokens>
  <fontColorKey>black</fontColorKey>
  <fontSize>1.00em</fontSize>
  <minWidth/>
  <maxWidth/>
  <allowPlayerEdits>false</allowPlayerEdits>
  <toolTip>Merges the Attack configuration object from DNDBeyond object with the attack configuration stored on the AttackJSON property.</toolTip>
  <displayHotKey>true</displayHotKey>
  <commonMacro>false</commonMacro>
  <compareGroup>true</compareGroup>
  <compareSortPrefix>true</compareSortPrefix>
  <compareCommand>true</compareCommand>
  <compareIncludeLabel>true</compareIncludeLabel>
  <compareAutoExecute>true</compareAutoExecute>
  <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
</net.rptools.maptool.model.MacroButtonProperties>
