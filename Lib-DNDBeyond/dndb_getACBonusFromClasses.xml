<net.rptools.maptool.model.MacroButtonProperties>
  <macroUUID>ed5db06c-9fbb-43b8-8722-fc44c7bf55b6</macroUUID>
  <saveLocation>Token</saveLocation>
  <index>28</index>
  <colorKey>default</colorKey>
  <hotKey>None</hotKey>
  <command>[h: toon = arg(0)]

[h: totalClassACBonus = 0]
[h: classFeatures = "[]"]
&lt;!-- Look for armor based features --&gt;

&lt;!-- Try and look for sub-type ends-with armor-class and use known ids for applying restrictions --&gt;
&lt;!-- Barbarian --&gt;
[h: barbarian = json.path.read (toon, "data.classes[*].[?(@.definition.name == 'Barbarian')]")]
[h, if (json.length (barbarian) == 0): barbarian = "{}"]
[h: log.debug ("barbarian: " + json.length (barbarian))]
[h, if (json.length (barbarian) &gt; 0): barbarian = json.get (barbarian, 0)]

&lt;!-- Look for barbarian class feature "Unarmored Defense" --&gt;
[h: level = 0]
[h: unarmoredDefense = "[]"]
[h: level = json.get (barbarian, "level")]
[h, if (level == ""): level = 0]
[h: log.debug ("level: " + level)]
[h, if (level &gt; 0), code: {
	[h: unarmoredDefense = json.path.read (barbarian,
			"classFeatures[*].[?(@.definition.name == 'Unarmored Defense')]")]
	[h, if (json.length (unarmoredDefense) &gt; 0): unarmoredDefense = json.get (unarmoredDefense, 0)]
	[h: log.debug ("unarmoredDefense: " + json.indent (unarmoredDefense))]
}; {0}
]

[h, if (json.length (unarmoredDefense) &gt; 0), code: {
	&lt;!-- Confirm the barb isnt wearing armor (note: DND Beyond doesnt check this) --&gt;
	[h: equippedArmors = json.path.read (toon, "data.inventory[*].[?(@.equipped == true &amp;&amp; @.definition.armorTypeId &lt; 4)]")]
	[h: totalEquipped = json.length (equippedArmors)]
	[h: log.debug ("totalEquipped: " + totalEquipped)]
	[h, if (totalEquipped == 0), code: {
		[h: attributes = dndb_getAbilities (toon)]
		[h: featureBonus = json.get (attributes, "conBonus")]
		[h: totalClassACBonus = totalClassACBonus + featureBonus]
		&lt;!-- Tack on a bonus attribute: dndb_bonus --&gt;
		[h: unarmoredDefense = json.set (unarmoredDefense, "dndb_bonus", featureBonus)]
		[h: classFeatures = json.append (classFeatures, unarmoredDefense)]
	}]
}]

&lt;!-- Build the return object --&gt;
[h: acBonuses = json.set ("", "totalClassACBonus", totalClassACBonus,
			"classFeatures", classFeatures)]
[h: macro.return = acBonuses]</command>
  <label>dndb_getACBonusFromClasses</label>
  <group>Utility</group>
  <sortby/>
  <autoExecute>true</autoExecute>
  <includeLabel>false</includeLabel>
  <applyToTokens>false</applyToTokens>
  <fontColorKey>black</fontColorKey>
  <fontSize>1.00em</fontSize>
  <minWidth/>
  <maxWidth/>
  <allowPlayerEdits>false</allowPlayerEdits>
  <toolTip>Returns the AC Bonuses from class features

arg (0) = toon

returns bonusObj

ex.
{
	"totalClassACBonus" : 3,
	"classFeatures" : [ contributing class features ]
}</toolTip>
  <displayHotKey>true</displayHotKey>
  <commonMacro>false</commonMacro>
  <compareGroup>true</compareGroup>
  <compareSortPrefix>true</compareSortPrefix>
  <compareCommand>true</compareCommand>
  <compareIncludeLabel>true</compareIncludeLabel>
  <compareAutoExecute>true</compareAutoExecute>
  <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
</net.rptools.maptool.model.MacroButtonProperties>
