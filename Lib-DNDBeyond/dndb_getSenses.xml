<net.rptools.maptool.model.MacroButtonProperties>
  <macroUUID>c3732c7a-b602-43cc-8d70-890a47414647</macroUUID>
  <saveLocation>Token</saveLocation>
  <index>68</index>
  <colorKey>default</colorKey>
  <hotKey>None</hotKey>
  <command>[h: toon = arg (0)]

[h: VISION_NAMES = json.append ("", "Darkvision", "Blindsight", "Truesight", "Tremorsense")]

[h: data = json.get (toon, "data")]
[h: dataRetains = json.append ("", "modifiers", "inventory", "classes", "stats", "bonusStats", "overrideStats")]
[h: skinnyData = dndb_getSkinnyObject (data, dataRetains)]
&lt;!-- Skinnify the toon --&gt;
[h: skinnytoon = json.set (toon, "data", skinnyData)]

[h: searchObj = json.set ("", "object", skinnytoon,
							"type", "set-base")]
[h: baseMods = dndb_searchGrantedModifiers (searchObj)]

[h: searchObj = json.set (searchObj, "type", "sense")]
[h: bonusMods = dndb_searchGrantedModifiers (searchObj)]

[h: visions = "[]"]
&lt;!-- set the bases --&gt;
[h, foreach (visionName, VISION_NAMES), code: {
	[h: log.debug ("dndb_getSenses: visionName = " + visionName)]
	[h: lVisionName = lower (visionName)]
	&lt;!-- search in the base Mod for the biggest base value --&gt;
	[h: modSearchObj = json.set ("", "object", baseMods,
								"subType", lVisionName,
								"property", "value")]
	[h: distances = dndb_searchJsonObject (modSearchObj)]
	[h: log.debug ("base distances: " + distances)]
	[h, if (json.length (distances) == 0), code: {
		[h: distance = 0]
	}; {
		[h: distances = json.sort (distances, "desc")]
		[h: distance = json.get (distances, 0)]
	}]
	[h: baseDistance = distance]

	&lt;!-- add the bonsues --&gt;
	[h: modSearchObj = json.set (modSearchObj, "object", bonusMods)]
	[h: distances = dndb_searchJsonObject (modSearchObj)]
	[h: log.debug ("bonus distances: " + distances)]
	[h, if (json.length (distances) == 0), code: {
		[h: distance = 0]
	}; {
		[h: distances = json.sort (distances, "desc")]
		[h: distance = json.get (distances, 0)]
	}]
	[h: bonusDistance = distance]
	
	[h: vision = json.set ("", "name", visionName, "distance", baseDistance + bonusDistance)]	
	[h: visions = json.append (visions, vision)]
}]

[h: macro.return = visions]</command>
  <label>dndb_getSenses</label>
  <group>Character</group>
  <sortby/>
  <autoExecute>true</autoExecute>
  <includeLabel>false</includeLabel>
  <applyToTokens>false</applyToTokens>
  <fontColorKey>black</fontColorKey>
  <fontSize>1.00em</fontSize>
  <minWidth/>
  <maxWidth/>
  <allowPlayerEdits>false</allowPlayerEdits>
  <toolTip>Fetches the sense for the toon

arg (0) = toon

returns
[
	{
		"name": "Darkvision",
		"distance": 60
	},
	{
		"name": "Blindsight",
		"distance": 15
	}
]

</toolTip>
  <displayHotKey>true</displayHotKey>
  <commonMacro>false</commonMacro>
  <compareGroup>true</compareGroup>
  <compareSortPrefix>true</compareSortPrefix>
  <compareCommand>true</compareCommand>
  <compareIncludeLabel>true</compareIncludeLabel>
  <compareAutoExecute>true</compareAutoExecute>
  <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
</net.rptools.maptool.model.MacroButtonProperties>
