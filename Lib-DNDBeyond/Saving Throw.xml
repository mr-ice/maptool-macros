<net.rptools.maptool.model.MacroButtonProperties>
  <macroUUID>86710f9b-e09c-4833-9a26-510cc7a6a13d</macroUUID>
  <saveLocation>Token</saveLocation>
  <index>51</index>
  <colorKey>black</colorKey>
  <hotKey>None</hotKey>
  <command>[h, if (json.length (macro.args) &gt; 0): inputObj = arg (0); inputObj = ""]
[h: basicToon = getProperty ("dndb_BasicToon")]
[h, if (encode (basicToon) == ""), code: {
	[h: error = "You must initialize with DNDBeyond first"]
	[h: abort (input ( " junk | | " + error + " | LABEL | TEXT=fals"))]
	[h: return (0, error)]
}]

[h: savingThrows = json.get (basicToon, "savingThrows")]
[h: savingThrowNameCsv = ""]
[h, foreach (savingThrow, savingThrows), code: {
	[h: savingThrowNameCsv = savingThrowNameCsv + "," + json.get (savingThrow, "name")]
}]
[h: savingThrowNameCsv = substring (savingThrowNameCsv, 1)]
[h, if (encode (inputObj) == ""): abort (input ( " selectedsavingThrowPos | " + savingThrowNameCsv + " | Select Saving Throw | List ",
					" advDisadv | None, Advantage, Disadvantage | Advantage / Disadvantage | List ",
					" saveAsMacro | 0 | Save as Macro | check "))]
[h, if (encode (inputObj) != ""), code: {
	[h: selectedsavingThrowPos = json.get (inputObj, "selectedsavingThrowPos")]
	[h: advDisadv = json.get (inputObj, "advDisadv")]
	&lt;!-- never let the passed in object allow to save a macro. else a never ending cycle --&gt;
	[h: saveAsMacro = 0]
}]
&lt;!-- selection should correspond to the arry position of the savingThrow object --&gt;
[h: savingThrow = json.get (savingThrows, selectedsavingThrowPos)]
[h: savingThrowName = json.get (savingThrow, "name") + " Save"]
[h: bonus = getProperty (savingThrowName)]

&lt;!-- Determine current state --&gt;
&lt;!-- Fails str and dex --&gt;
[h: fuckedStates = json.append ("", "Paralyzed", "Petrified", "Stunned", "Unconscious")]
[h: isFucked = 0]
[h: fuckedMsg = ""]
[h, foreach (fuckedState, fuckedStates), code: {
	[h: theState = getState (fuckedState)]
	[h, if (theState &gt; 0), code: {
		[h: isFucked = isFucked + 1]
		[h: fuckedMsg = fuckedMsg + "You're &lt;font color='red'&gt;&lt;b&gt;" + fuckedState + "&lt;/b&gt;&lt;/font&gt;!&lt;br&gt;"]
	}]
}]
&lt;!-- disadv on dex --&gt;
[h: isRestrained = getState ("Restrained")]

&lt;!-- Auto fails --&gt;
[r, if ( selectedsavingThrowPos &lt;= 1 &amp;&amp; isFucked &gt; 0), code: {
	[r: fuckedMsg]
	[r: "&lt;b&gt;You automatically &lt;font color='red'&gt;&lt;i&gt;FAIL&lt;/i&gt;&lt;/font&gt;!!&lt;b&gt;&lt;br&gt;"]
}; {}]


[r, if (selectedsavingThrowPos == 1 &amp;&amp; isRestrained &gt; 0), code: {
	[r: "&lt;font color='red'&gt;Applying Restrained effect (Disadvantage)&lt;/font&gt;&lt;br&gt;"]
	[h, if (advDisadv == 1): advDisadv = 0; advDisadv = 2]
}; {}]

[h: savingThrowCheckObj = json.set ("", "checkLabel", json.get (savingThrow, "name") + " Saving Throw",
							"bonus", bonus,
							"advDisadv", advDisadv)]

[h, if (saveAsMacro &gt; 0), code: {
	[h: cmdArg = json.set ("", "selectedsavingThrowPos", selectedsavingThrowPos, 
							"advDisadv", advDisadv)]
	[h, if (advDisadv == 0): advLabel = ""]
	[h, if (advDisadv == 1): advLabel = " (+)"]
	[h, if (advDisadv == 2): advLabel = " (-)"]
	[h: macroName = savingThrowName + advLabel]
	[h: currentMacros = getMacros()]
	[h: cmd = "[macro ('Saving Throw@Lib:DnDBeyond'): '" + cmdArg + "']"]
	&lt;!-- dont create duplicates --&gt;
	[h, foreach (currentMacro, currentMacros), if (currentMacro == macroName): saveAsMacro = 0]
	[h: macroConfig = json.set ("", "applyToSelected", 1,
								"autoExecute", 1,
								"color", "black",
								"sortBy", selectedsavingThrowPos,
								"fontSize", "1.05em",
								"fontColor", "yellow",
								"group", "D&amp;D Beyond - Saves",
								"playerEditable", 1)]
	[h, if (saveAsMacro &gt; 0): createMacro (macroName, cmd, macroConfig)]
}]


[r, macro ("Make Check@Lib:DnDBeyond"): savingThrowCheckObj]</command>
  <label>Saving Throw</label>
  <group>Token</group>
  <sortby>10</sortby>
  <autoExecute>true</autoExecute>
  <includeLabel>false</includeLabel>
  <applyToTokens>true</applyToTokens>
  <fontColorKey>yellow</fontColorKey>
  <fontSize>1.05em</fontSize>
  <minWidth/>
  <maxWidth/>
  <allowPlayerEdits>false</allowPlayerEdits>
  <toolTip>Yer gonna DIE!</toolTip>
  <displayHotKey>true</displayHotKey>
  <commonMacro>false</commonMacro>
  <compareGroup>true</compareGroup>
  <compareSortPrefix>true</compareSortPrefix>
  <compareCommand>true</compareCommand>
  <compareIncludeLabel>true</compareIncludeLabel>
  <compareAutoExecute>true</compareAutoExecute>
  <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
</net.rptools.maptool.model.MacroButtonProperties>
